9강
의존객체 자동주입: 스프링 설정 파일에서 의존 객체를 주입할 댸 constructor-org  또는 property 태그로
의존 대상 객체를 명시하지 않아도 스프링 컨테이너가 자동으로 필요한 의존 대상 객체를
찾아서 의존 대상 객체가 필요한 객체에 주입해 주는 기능이다.
구현방법은 @Autowired와 @Resource 어노테이션을 이용해서 쉽게 구현할 수 잇다.

@Autowired 주입하려고 하는 객체의 타입이 일치하는 객체를 자동으로 주입한다.
@Autowired(required = false) 의존객체가 있으면 주입을 하고 없으면 그냥 하지마라는뜻

어노테이션 사용하려면 밑의 식으로 resource에 리소스에 추가해야한다.
-------------------------------------------------------------------------
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
 		http://www.springframework.org/schema/beans/spring-beans.xsd 
 		http://www.springframework.org/schema/context 
 		http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />

	<bean id="wordDao" class="com.word.dao.WordDao" >
		<!-- <qualifier value="usedDao"/> -->

-----------------------------------------------------------------
동일한 객체가 2개 이상인 경우 스프링 컨테이너는 자동 주입 대상 객체를 판단하지 못해서
exception을 발생시킨다.
<qualifier value="usedDao"/> 이걸 써주면 뭐를 사용할줄 알기때문에 오류 나지 않음
사용방법
@Autowired
@Qualifier("usedDao")
-----------------------------

자동주입을 사용할 때 주의사항은 생성자에 사용할때는 그냥 사용하면 되는데 메소드에 사용할
때는 default생성자를 하나 만들어야한다.

@Resurce: 주입하려고 하는 객체의 이름이 일치하는 객체를 자동으로 주입한다.리소스는 생성자에
사용할 수 없다.


메소드 이름과 bean의 id가 이름이 같으면 오류는 뜨지 않지만 좋은 방법은 아님

@Inject Autowired와 거의 비슷하게 inject 어노테이션을 이용해서 객체를 자동으로 주입을 할 수 있다.
차이점은 autowired는 required 속성을 이용해서 의존 대상 객체가없어도 익셉션을 피할 수 있지만
inject같은 경우 required 속성을 지원하지 않는다.

@Inject
@Named(value="wordDao1")














